//
// UpdateOpenIdIdpConfigRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct UpdateOpenIdIdpConfigRequest: Codable {

    /** Name of the IDP */
    public var name: String?
    /** Issuer identifier of the IDP The value is a case sensitive URL. */
    public var issuer: String?
    /** URL of the authorization endpoint */
    public var authorizationEndPointUrl: String?
    /** URL of the token endpoint */
    public var tokenEndPointUrl: String?
    /** URL of the user info endpoint */
    public var userInfoEndPointUrl: String?
    /** URL of the JWKS endpoint */
    public var jwksEndPointUrl: String?
    /** ID of the OAuth client */
    public var clientId: String?
    /** Secret, which uses the client for authentication. */
    public var clientSecret: String?
    /** List of requested scopes Usually &#x60;openid&#x60; and the names of the requested claims. */
    public var scopes: [String]?
    /** URIs, to which a user is redirected after authorization. */
    public var redirectUris: [String]?
    /** Determines whether PKCE is enabled. cf. [RFC 7636](https://tools.ietf.org/html/rfc7636) (default: false) */
    public var pkceEnabled: Bool?
    /** PKCE code challenge method. cf. [RFC 7636](https://tools.ietf.org/html/rfc7636) */
    public var pkceChallengeMethod: String?
    /** Name of the claim which is used for the user mapping. */
    public var mappingClaim: String?
    /** Name of the claim which is used for the user mapping fallback. */
    public var fallbackMappingClaim: String?
    /** Determines if the user metadata is updated with data from the IDP. The scope &#x60;profile&#x60; is needed for the update. If this scope is not granted, only the email address is updated. (default: false) */
    public var userUpdateEnabled: Bool?
    /** Set &#x60;true&#x60; to reset &#x60;fallbackMappingClaim&#x60;. */
    public var resetFallbackMappingClaim: Bool?



}

